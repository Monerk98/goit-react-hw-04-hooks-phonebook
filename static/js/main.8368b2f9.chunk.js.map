{"version":3,"sources":["components/App.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/App.js","index.js","components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactListItem","name","number","onClick","className","s","item","type","btn","ContactList","contacts","onDeleteContact","list","map","id","Form","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","form","preventDefault","label","placeholder","pattern","title","required","onChange","input","Filter","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","duplicate","find","contact","alert","shortid","generate","prevState","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8368b2f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phone\":\"App_phone__3BuSI\",\"contact\":\"App_contact__10MM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__10lCU\",\"list\":\"ContactList_list__3pDKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1eX-t\",\"label\":\"Form_label__1GTky\",\"btn\":\"Form_btn__1F1gg\",\"input\":\"Form_input__3mECC\",\"inputTwo\":\"Form_inputTwo__2a_7K\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onClick }) => (\r\n  <li className={s.item}>\r\n    {name}: {number}\r\n    <button type=\"button\" className={s.btn} onClick={onClick}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import s from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onClick={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setNumber(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Homer Simpson\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"+38(0XX)-XXX-XX-XX\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <button className={s.btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Filter\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Enter some letter to search\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport ContactList from \"./ContactList/ContactList.jsx\";\nimport shortid from \"shortid\";\nimport Form from \"./Form/Form.jsx\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    let duplicate = contacts.find((contact) => contact.name === name);\n\n    if (duplicate) {\n      alert(\"Такой контакт уже существует!\");\n    } else {\n      const contact = {\n        name,\n        number,\n        id: shortid.generate(),\n      };\n\n      setContacts((prevState) => [contact, ...prevState]);\n    }\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  return (\n    <>\n      <h1 className={s}>Phonebook</h1>\n      <Form onSubmit={addContact} />\n      <h2 className={s}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__cKFPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__JQRHN\",\"input\":\"Filter_input__BOYyv\"};"],"sourceRoot":""}